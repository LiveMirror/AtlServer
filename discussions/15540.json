[
  {
    "Id": "50456",
    "ThreadId": "15540",
    "Html": "\r\nHi,<br /><br />I don't seem to be able to create a new issue on this (server reports error on creation attempt), so I am opening this as a discussion.<br /><br />This is a copy from <br /><a href=\"http://groups.google.com/group/microsoft.public.vc.atl/browse_thread/thread/78e6ef2a850f999e/c1490a09fab7f4a8#c1490a09fab7f4a8\" class=\"externalLink\">http://groups.google.com/group/microsoft.public.vc.atl/browse_thread/thread/78e6ef2a850f999e/c1490a09fab7f4a8#c1490a09fab7f4a8<span class=\"externalLinkIcon\" style=\"font-family:Consolas, Courier New, Courier, Monospace;\"></span></a><br /><br />I have recently encountered another bug with ATL's regular expression class, Visual Studio 2005 SP1. Match method jumps beyond of the argument string what can end up with access violation etc.<br /><br />This is the code to reproduce the problem:<br /><br />===<br />        CAtlRegExp&lt;CAtlRECharTraitsA&gt; Expression;<br />        ATLVERIFY(Expression.Parse(\" *{<a href=\"http://www.codeplex.com/AtlServer/Wiki/View.aspx?title=%5e%20%5c%5c%3d%5c%5c%2c\">^ \\\\=\\\\,</a>+ *}( *\\\\= *(({<a href=\"http://www.codeplex.com/AtlServer/Wiki/View.aspx?title=%5e%20%5c%5c%2c%5c%5c%5c%22\">^ \\\\,\\\\\\\"</a><u>?})|(\\\\\\\"{<a href=\"http://www.codeplex.com/AtlServer/Wiki/View.aspx?title=%5e%5c%5c%5c%22\">^\\\\\\\"</a></u>?}\\\\\\\")) *)?(\\\\, *)?\", FALSE) == REPARSE<i>ERROR</i>OK);<br />        static CHAR g_pszValue[] = \"realm=\\\"Session streamed by RTP/RTSP server\\\", nonce=\\\"c26b8dbee7f21b41de1f7ef9a56d5695\\\"\";<br />        for(LPCSTR pszPointer = g_pszValue; ; )<br />        {<br />                CAtlREMatchContext&lt;CAtlRECharTraitsA&gt; MatchContext;<br />                LPCSTR pszNewPointer;<br />                if(!Expression.Match(pszPointer, &amp;MatchContext, &amp;pszNewPointer))<br />                        break;<br />                ATLASSERT(pszNewPointer &lt;= g<i>pszValue + strlen(g</i>pszValue) + 1);<br />                pszPointer = pszNewPointer;<br />        }<br />===<br /><br />The code stops at ATLASSERT. I have a VS 2005 project reproducing this which I would attach if there were an option.<br /><br />And this is what I believe to be a fix for the problem (atlrx.h):<br /><br />===<br />                        case RE_ADVANCE:<br /><br />                                // FIX: Roman's fix for !*szCurrInput bug<br />#if TRUE<br />                                if(*szCurrInput == '\\0')<br />                                        goto Error;<br />#endif<br /><br />                                sz = CharTraits::Next(szCurrInput);<br />                                szCurrInput = sz;<br />                                if (*sz == '\\0')<br />                                        goto Error;<br />                                ip = 0;<br />                                pContext-&gt;m_nTos = 0;<br />                                break;<br />===<br /><br />I hope this information is useful. <br />",
    "PostedDate": "2007-09-24T02:07:46.683-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]